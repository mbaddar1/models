TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 20 files
Detected 24 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: deep_contextual_bandits/example_main.py
--------------------------------------------------------------------------------
deep_contextual_bandits/example_main.py:242:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:244:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:251:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:272:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:293:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:315:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:337:21: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:359:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:382:22: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/example_main.py:407:15: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: deep_contextual_bandits/bandits/algorithms/multitask_gp.py
--------------------------------------------------------------------------------
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:128:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:134:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:139:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:149:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:154:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:161:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:163:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:165:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:167:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:169:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
deep_contextual_bandits/bandits/algorithms/multitask_gp.py:174:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py
--------------------------------------------------------------------------------
deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py:55:9: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py:59:47: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py:59:47: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'deep_contextual_bandits/'
================================================================================
--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/test_deep_bayesian_bandits.py'
 outputting to 'deep_contextual_bandits_v2/test_deep_bayesian_bandits.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/example_main.py'
 outputting to 'deep_contextual_bandits_v2/example_main.py'
--------------------------------------------------------------------------------

242:12: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
244:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
251:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
272:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
293:16: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
315:20: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
337:21: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
359:19: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
382:22: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
407:15: ERROR: Using member tf.contrib.training.HParams in deprecated module tf.contrib. tf.contrib.training.HParams cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/core/contextual_dataset.py'
 outputting to 'deep_contextual_bandits_v2/bandits/core/contextual_dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/core/bandit_algorithm.py'
 outputting to 'deep_contextual_bandits_v2/bandits/core/bandit_algorithm.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/core/bayesian_nn.py'
 outputting to 'deep_contextual_bandits_v2/bandits/core/bayesian_nn.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/core/contextual_bandit.py'
 outputting to 'deep_contextual_bandits_v2/bandits/core/contextual_bandit.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/parameter_noise_sampling.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/parameter_noise_sampling.py'
--------------------------------------------------------------------------------

68:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
71:14: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
73:10: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/fixed_policy_sampling.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/fixed_policy_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/bootstrapped_bnn_sampling.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/bootstrapped_bnn_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/posterior_bnn_sampling.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/posterior_bnn_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/bf_variational_neural_bandit_model.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/bf_variational_neural_bandit_model.py'
--------------------------------------------------------------------------------

43:11: INFO: Added keywords to args of function 'tf.reduce_sum'
99:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
104:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
125:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
144:32: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
147:34: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
154:49: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
154:66: INFO: Added keywords to args of function 'tf.shape'
169:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
202:27: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
203:36: INFO: Added keywords to args of function 'tf.size'
246:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
246:29: INFO: Added keywords to args of function 'tf.shape'
247:30: INFO: Added keywords to args of function 'tf.reduce_sum'
254:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
255:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
260:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
260:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
274:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
276:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
278:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
279:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
280:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
283:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
289:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

289:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
290:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
290:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
291:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
291:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
292:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
292:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
306:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

306:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/bb_alpha_divergence_model.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/bb_alpha_divergence_model.py'
--------------------------------------------------------------------------------

43:11: INFO: Added keywords to args of function 'tf.reduce_sum'
100:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
101:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
103:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
105:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
107:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
116:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
120:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
125:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
133:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
140:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
173:18: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
174:18: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
181:17: INFO: Added keywords to args of function 'tf.reduce_sum'
185:17: INFO: Added keywords to args of function 'tf.reduce_sum'
197:32: INFO: Added keywords to args of function 'tf.reduce_sum'
215:23: INFO: Added keywords to args of function 'tf.reduce_sum'
216:24: INFO: Added keywords to args of function 'tf.reduce_sum'
216:38: INFO: Renamed 'tf.log' to 'tf.math.log'
216:62: INFO: Renamed 'tf.log' to 'tf.math.log'
218:23: INFO: Added keywords to args of function 'tf.reduce_sum'
219:24: INFO: Added keywords to args of function 'tf.reduce_sum'
219:38: INFO: Renamed 'tf.log' to 'tf.math.log'
219:62: INFO: Renamed 'tf.log' to 'tf.math.log'
228:30: INFO: Renamed 'tf.log' to 'tf.math.log'
250:32: INFO: Added keywords to args of function 'tf.transpose'
251:22: INFO: Added keywords to args of function 'tf.reduce_logsumexp'
252:19: INFO: Renamed 'tf.log' to 'tf.math.log'
255:11: INFO: Added keywords to args of function 'tf.reduce_sum'
276:39: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
307:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
308:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
312:14: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
314:16: INFO: Added keywords to args of function 'tf.reduce_sum'
318:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
318:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
322:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
322:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
323:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
323:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
324:22: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
324:22: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
338:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

338:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/multitask_gp.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/multitask_gp.py'
--------------------------------------------------------------------------------

68:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
70:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
70:46: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
71:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
72:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
73:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
74:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
75:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
79:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
85:9: INFO: Added keywords to args of function 'tf.reduce_sum'
86:9: INFO: Added keywords to args of function 'tf.reduce_sum'
87:62: INFO: Added keywords to args of function 'tf.transpose'
94:42: INFO: Added keywords to args of function 'tf.argmax'
95:43: INFO: Added keywords to args of function 'tf.argmax'
125:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
128:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
128:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
134:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
134:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
139:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
139:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
145:20: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
146:22: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
149:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
149:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
154:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
154:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
161:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
161:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
163:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
163:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
165:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
165:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
167:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
167:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
169:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
169:29: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
174:24: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
174:24: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
176:20: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
182:35: INFO: Added keywords to args of function 'tf.reduce_sum'
184:19: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
185:36: INFO: Added keywords to args of function 'tf.shape'
186:19: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
187:29: INFO: Added keywords to args of function 'tf.reduce_sum'
188:18: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
189:39: INFO: Added keywords to args of function 'tf.reduce_sum'
190:21: INFO: Added keywords to args of function 'tf.reduce_sum'
196:33: INFO: Added keywords to args of function 'tf.boolean_mask'
197:18: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
206:30: INFO: Added keywords to args of function 'tf.shape'
208:16: INFO: Renamed 'tf.cholesky' to 'tf.linalg.cholesky'
209:16: INFO: Renamed 'tf.cholesky_solve' to 'tf.linalg.cholesky_solve'
209:52: INFO: Added keywords to args of function 'tf.shape'
216:24: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
222:21: INFO: Added keywords to args of function 'tf.reduce_sum'
222:35: INFO: Renamed 'tf.log' to 'tf.math.log'
222:42: INFO: Renamed 'tf.diag_part' to 'tf.linalg.tensor_diag_part'
225:24: INFO: Added keywords to args of function 'tf.reduce_sum'
226:8: INFO: Added keywords to args of function 'tf.transpose'
234:16: INFO: Added keywords to args of function 'tf.reduce_sum'
244:16: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
261:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
261:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
263:17: INFO: Renamed 'tf.add_check_numerics_ops' to 'tf.compat.v1.add_check_numerics_ops'
284:20: INFO: Added keywords to args of function 'tf.shape'
303:28: INFO: Added keywords to args of function 'tf.transpose'
307:14: INFO: Renamed 'tf.svd' to 'tf.linalg.svd'
308:39: INFO: Renamed 'tf.diag' to 'tf.linalg.tensor_diag'
308:51: INFO: Added keywords to args of function 'tf.transpose'
313:12: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
313:30: INFO: Added keywords to args of function 'tf.shape'
317:8: INFO: Added keywords to args of function 'tf.transpose'
325:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
325:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
326:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
326:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
327:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
327:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
328:6: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
328:6: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
329:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
329:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
330:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
330:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
331:24: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
331:24: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/neural_linear_sampling.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/neural_linear_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/neural_bandit_model.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/neural_bandit_model.py'
--------------------------------------------------------------------------------

55:9: ERROR: Using member tf.contrib.layers.fully_connected in deprecated module tf.contrib. tf.contrib.layers.fully_connected cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
59:47: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
59:47: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
61:28: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
61:28: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
65:11: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

74:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
74:45: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
80:15: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
83:29: INFO: tf.random_uniform_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
83:29: INFO: Renamed 'tf.random_uniform_initializer' to 'tf.compat.v1.random_uniform_initializer'
101:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
103:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

103:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
105:27: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
108:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
114:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
120:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
127:20: INFO: Renamed 'tf.squared_difference' to 'tf.math.squared_difference'
129:20: INFO: Added keywords to args of function 'tf.reduce_sum'
132:20: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

132:20: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
140:30: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
140:30: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
143:16: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
145:12: INFO: Added keywords to args of function 'tf.gradients'
152:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
176:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

176:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
183:11: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
189:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

189:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
190:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
190:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
191:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
191:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
192:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
192:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
193:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
193:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/linear_full_posterior_sampling.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/linear_full_posterior_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/uniform_sampling.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/uniform_sampling.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/algorithms/variational_neural_bandit_model.py'
 outputting to 'deep_contextual_bandits_v2/bandits/algorithms/variational_neural_bandit_model.py'
--------------------------------------------------------------------------------

36:36: INFO: Renamed 'tf.log' to 'tf.math.log'
39:11: INFO: Added keywords to args of function 'tf.reduce_sum'
50:37: INFO: Renamed 'tf.log' to 'tf.math.log'
50:58: INFO: Renamed 'tf.log' to 'tf.math.log'
51:9: INFO: Added keywords to args of function 'tf.reduce_sum'
99:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
104:23: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
125:14: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
144:32: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
147:34: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
154:49: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
154:66: INFO: Added keywords to args of function 'tf.shape'
169:25: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
240:17: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
240:29: INFO: Added keywords to args of function 'tf.shape'
241:30: INFO: Added keywords to args of function 'tf.reduce_sum'
248:23: INFO: Renamed 'tf.train.get_or_create_global_step' to 'tf.compat.v1.train.get_or_create_global_step'
249:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
254:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
254:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
268:18: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
270:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
272:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
273:15: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
274:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
277:20: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
283:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

283:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
284:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
284:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
285:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
285:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
286:26: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
286:26: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
300:18: INFO: tf.train.inverse_time_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

300:18: INFO: Renamed 'tf.train.inverse_time_decay' to 'tf.compat.v1.train.inverse_time_decay'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/data/synthetic_data_sampler.py'
 outputting to 'deep_contextual_bandits_v2/bandits/data/synthetic_data_sampler.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'deep_contextual_bandits/bandits/data/data_sampler.py'
 outputting to 'deep_contextual_bandits_v2/bandits/data/data_sampler.py'
--------------------------------------------------------------------------------

111:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
147:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
182:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
222:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
270:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
315:7: INFO: Renamed 'tf.gfile.Open' to 'tf.io.gfile.GFile'
--------------------------------------------------------------------------------

